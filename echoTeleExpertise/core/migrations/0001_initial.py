# Generated by Django 3.0.6 on 2020-06-15 23:58

import core.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=20, verbose_name='Nom')),
                ('speciality', models.CharField(max_length=50, verbose_name='Specialité')),
                ('institution', models.CharField(max_length=50, verbose_name='Etablissement')),
                ('city', models.CharField(max_length=20, verbose_name='Ville')),
                ('address', models.CharField(max_length=80, verbose_name='Adresse')),
                ('phone', models.CharField(max_length=20, verbose_name='Telephone')),
                ('cin', models.CharField(max_length=15, verbose_name='CIN')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date du rejoint')),
                ('avatar', models.ImageField(default='avatars/empty_profile.jpg', upload_to='avatars/%Y/%m/%d')),
                ('biography', models.TextField(blank=True, verbose_name='Biographie')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Personnel')),
                ('count_opinion', models.IntegerField(default=0, verbose_name='Nombre des aides délivrer')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', core.managers.UserManager()),
            ],
        ),
    ]
